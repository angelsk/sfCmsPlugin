<?php

/**
 * ContentBlockVersionTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginContentBlockVersionTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object ContentBlockVersionTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('ContentBlockVersion');
  }

  /**
   * Gets the currently live version of this Content block
   *
   * @param int $id
   * @param string $lang
   * @return ContentBlockVersion
   */
  public function getCurrentVersion($id, $lang)
  {
    $query = $this->createQuery('v')
    ->select('v.*')
    ->innerJoin('v.CurrentVersion cv')
    ->where('cv.content_block_id = ? AND v.content_block_id = ?', array($id, $id));

    if ($lang === null)
    {
      $query->addWhere('cv.lang IS NULL');
    }
    else
    {
      $query->addWhere('cv.lang = ?', $lang);
    }

    return $query->fetchOne();
  }

  /**
   * Get the newest version of this Content block
   *
   * @param int $id
   * @param string $lang
   * @return ContentBlockVersion
   */
  public function getNewestVersion($id, $lang)
  {
    $query = $this->createQuery('v')
    ->where('v.content_block_id = ?', $id);
     
    if ($lang === null)
    {
      $query->addWhere('v.lang IS NULL');
    }
    else
    {
      $query->addWhere('v.lang = ?', $lang);
    }

    $query->orderBy('v.id DESC');

    return $query->fetchOne();
  }

  /**
   * Get the specified version of this Content block
   *
   * @param int $id
   * @param string $lang
   * @param int $versionId
   * @return ContentBlockVersion
   */
  public function getSpecifiedVersion($id, $lang, $versionId)
  {
    $query = $this->createQuery('v')
    ->where('v.content_block_id = ? AND v.id = ?', array($id, $versionId));
     
    if ($lang === null)
    {
      $query->addWhere('v.lang IS NULL');
    }
    else
    {
      $query->addWhere('v.lang = ?', $lang);
    }

    return $query->fetchOne();
  }

  /**
   * Get an efficient version history as an array
   *
   * @param string $lang
   * @param integer $limit
   * @return array
   */
  public function getEfficientVersionHistoryWithUsers($id, $lang, $limit = 10)
  {
    $query = $this->createQuery('v')
    ->select('v.id, v.created_at, c.username')
    ->leftJoin('v.CreatedBy c')
    ->where('v.content_block_id = ?', array($id))
    ->orderBy('v.id DESC')
    ->limit($limit);

    if ($lang === null)
    {
      $query->addWhere('v.lang IS NULL');
    }
    else
    {
      $query->addWhere('v.lang = ?', array($lang));
    }

    return $query->execute(array(), Doctrine_Core::HYDRATE_ARRAY);
  }
}