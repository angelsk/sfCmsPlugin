<?php

/**
 * ListingItemTable
 *
 * This class has been auto-generated by the Doctrine ORM Framework
 */
abstract class PluginListingItemTable extends Doctrine_Table
{
  /**
   * Returns an instance of this class.
   *
   * @return object listingItemTable
   */
  public static function getInstance()
  {
    return Doctrine_Core::getTable('ListingItem');
  }

  /**
   * Get active items with a certain status
   *
   * @param string $template Listing template
   * @param string $status Status to retrieve
   * @param int $limit Number of active items to get
   * @return Doctrine_Collection
   */
  public function getItemsWithStatus($template, $status, $limit)
  {
    $order = listingManager::getInstance()->getListItemOrdering($template);

    $query = $this->createQuery('i')
                  ->innerJoin('i.Translation t INDEXBY lang')
                  ->innerJoin('i.Listing l')
                  ->innerJoin('l.Sitetree s')
                  ->where('i.status = ? AND i.is_active = ?', array($status, true))
                  ->limit($limit)
                  ->orderBy($order);

    return $query->execute();
  }

  /**
   * Find listing items to import
   * 
   * @param Listing $listing Find items for this type of listing (not including those already imported)
   * @param string $notSite Don't include items from this site
   * @param string $order The listing
   * @return Doctrine_Collection
   */
  public function findOtherItemsByListing($listing, $notSite, $order)
  {
    $query = $this->createQuery('i')
                  ->innerJoin('i.Translation t INDEXBY lang')
                  ->innerJoin('i.Listing l')
                  ->innerJoin('l.Sitetree s')
                  ->innerJoin('s.Translation st INDEXBY lang')
                  ->where('l.template = ? AND s.site != ?', array($listing->template, $notSite))
                  ->andWhere('i.slug NOT IN (SELECT ii.slug FROM ListingItem ii WHERE ii.listing_id = ?)', $listing->id)
                  ->orderBy($order);

    return $query->execute();
  }
}